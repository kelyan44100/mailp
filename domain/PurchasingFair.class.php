<?phpclass PurchasingFair implements JsonSerializable {        // Attributes    private $idPurchasingFair;    private $namePurchasingFair;    private $hexColor;    private $dayRdv;    private $startDatetime;    private $endDateTime;    private $lunchBreak;    private $oneTypeOfPf; // Class TypeOfPf    private $registrationClosingDateMagasin;    private $registrationClosingDateFournisseur;    private $dateDeletion;    // Constructor    public function __construct($namePurchasingFair, $hexColor, $dayRdv, $startDatetime, $endDateTime, $lunchBreak, $oneTypeOfPf, $registrationClosingDateMagasin, $registrationClosingDateFournisseur, $dateDeletion = "", $idPurchasingFair = -1) {        $this->idPurchasingFair = $idPurchasingFair;        $this->namePurchasingFair = $namePurchasingFair;        $this->hexColor = $hexColor;        $this->dayRdv = $dayRdv;        $this->startDatetime = $startDatetime;        $this->endDateTime = $endDateTime;        $this->lunchBreak = $lunchBreak;        $this->oneTypeOfPf = $oneTypeOfPf;        $this->registrationClosingDateMagasin = $registrationClosingDateMagasin;        $this->registrationClosingDateFournisseur = $registrationClosingDateFournisseur;        $this->dateDeletion = $dateDeletion;    }    // Getters & setters    public function getIdPurchasingFair() { return $this->idPurchasingFair; }        public function getNamePurchasingFair() { return $this->namePurchasingFair; }    public function getHexColor() { return $this->hexColor; }    public function getDayRdv() {return $this->hexColor; }    public function getStartDatetime() { return $this->startDatetime; }        public function getDayFromStartDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getStartDatetime())-> format('d'); }        public function getMonthFromStartDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getStartDatetime())-> format('m'); }        public function getYearFromStartDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getStartDatetime())-> format('Y'); }        public function getHoursFromStartDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getStartDatetime())-> format('H'); }        public function getMinutesFromStartDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getStartDatetime())-> format('i'); }    public function getEndDateTime() { return $this->endDateTime; }    public function getDayFromEndDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getEndDatetime())-> format('d'); }        public function getMonthFromEndDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getEndDatetime())-> format('m'); }        public function getYearFromEndDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getEndDatetime())-> format('Y'); }        public function getHoursFromEndDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getEndDatetime())-> format('H'); }        public function getMinutesFromEndDatetime() { return DateTime::createFromFormat('Y-m-d H:i:s', $this->getEndDatetime())-> format('i'); }    public function getLunchBreak() { return $this->lunchBreak; }        public function getOneTypeOfPf() { return $this->oneTypeOfPf; }        public function getRegistrationClosingDateMagasin() { return $this->registrationClosingDateMagasin; }    public function getRegistrationClosingDateFournisseur() { return $this->registrationClosingDateFournisseur; }    public function getDateDeletion() { return $this->dateDeletion; }    public function setIdPurchasingFair($idPurchasingFair) { $this->idPurchasingFair = $idPurchasingFair; }        public function setNamePurchasingFair($namePurchasingFair) { $this->namePurchasingFair = $namePurchasingFair; }    public function setHexColor($hexColor) { $this->hexColor = $hexColor; }    public function setDayRdv($dayRdv) { $this->dayRdv = $dayRdv; }    public function setStartDatetime($startDatetime) { $this->startDatetime = $startDatetime; }    public function setEndDateTime($endDateTime) { $this->endDateTime = $endDateTime; }    public function setLunchBreak($lunchBreak) { $this->lunchBreak = $lunchBreak; }        public function setOneTypeOfPf($oneTypeOfPf) { $this->oneTypeOfPf = $oneTypeOfPf; }        public function setRegistrationClosingDateMagasin($registrationClosingDateMagasin) { $this->registrationClosingDateMagasin = $registrationClosingDateMagasin; }    public function setRegistrationClosingDateFournisseur($registrationClosingDateFournisseur) { $this->registrationClosingDateFournisseur = $registrationClosingDateFournisseur; }    public function setDateDeletion($dateDeletion) { $this->dateDeletion = $dateDeletion; }        // Specify data which should be serialized to JSON    // http://php.net/manual/en/jsonserializable.jsonserialize.php    public function jsonSerialize() {        $array = [            'idPf' => $this->getIdPurchasingFair(),             'namePf' => $this->getNamePurchasingFair(),             'hexColorPf' => $this->getHexColor(),            'dayRdv' => $this->getDayRdv(),            'startDatetimePf' => DateTime::createFromFormat('Y-m-d H:i:s', $this->getStartDatetime())->format('d/m/Y H:i:s'),             'endDatetimePf' => DateTime::createFromFormat('Y-m-d H:i:s', $this->getEndDatetime())->format('d/m/Y H:i:s'),             'lunchBreakPf' => $this->getLunchBreak(),             'typePf' => $this->getOneTypeOfPf()->getIdTypeOfPf(),             'registrationClosingDateMagasinPf' => DateTime::createFromFormat('Y-m-d H:i:s', $this->getRegistrationClosingDateMagasin())->format('d/m/Y H:i:s'),            'registrationClosingDateFournisseurPf' => DateTime::createFromFormat('Y-m-d H:i:s', $this->getRegistrationClosingDateFournisseur())->format('d/m/Y H:i:s'),            'dateDeletionPf' => $this->getDateDeletion(),            ];        return $array;    }}?>